{"version":3,"sources":["assets\\BuyWork\\Script\\Net.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BookData, BookListData, OrderListData, URL, UserInfo } from \"./DataType\";\r\n\r\nexport default class Net {\r\n\r\n\r\n    static async login(name: string, psw: string): Promise<UserInfo> {\r\n        let data = {};\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.Login}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('登陆成功');\r\n                reslove(result.data)\r\n            } else {\r\n                reject(new Error(`登陆失败`));\r\n            }\r\n        })\r\n    }\r\n    static async logout(uid): Promise<any> {\r\n        let data = {\r\n            uid: uid\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.LogOut}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('登出成功');\r\n                reslove(true)\r\n            } else {\r\n                reject(new Error(`登出失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async getBookList(): Promise<BookListData> {\r\n        let data = {\r\n            currentPage: 0,\r\n            pageSize: 9999,\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result: BookListData = JSON.parse(await this.ajax('PUT', `${URL.DOMAIN}${URL.BookList}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('书单');\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`书单失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async addBook(bookData: BookData, uid): Promise<any> {\r\n        let data = bookData;\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.AddBook}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('添加书籍成功');\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`添加失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async updateBook(bookData: BookData, uid): Promise<any> {\r\n        let data = bookData;\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('PUT', `${URL.DOMAIN}${URL.AddBook}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('添加书籍成功');\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`添加失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    static async getBookByID(bookData: BookData, uid): Promise<any> {\r\n        let data = {\r\n            id: bookData.id\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('GET', `${URL.DOMAIN}${URL.AddBook}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('添加书籍成功');\r\n                reslove(result.data)\r\n            } else {\r\n                reject(new Error(`添加失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async register(name: string, psw: string, admin: boolean): Promise<any> {\r\n        let data = {\r\n            name: name,\r\n            password: psw,\r\n            admin: admin\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.Register}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('注册成功');\r\n                reslove(true)\r\n            } else {\r\n                reject(new Error(`注册失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async myList(uid): Promise<OrderListData> {\r\n        let data = {\r\n            currentPage: 0,\r\n            pageSize: 9999,\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.HistoryMy}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async buyBook(uid,bookId,total): Promise<any> {\r\n        let data = {\r\n            userId:uid ,\r\n            bookId: bookId,\r\n            total: total\r\n          };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.Buy}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('购买成功');\r\n                reslove(true)\r\n            } else {\r\n                reject(new Error(`购买失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    static ajax(type: string, url: string, data?: Blob | BufferSource | FormData | URLSearchParams | string | null, headers: { name: string, value: string }[] = []) {\r\n        return new Promise<string>((resolve) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState == 4) {\r\n                    if ((xhr.status >= 200 && xhr.status < 400)) {\r\n                        let response: string = xhr.responseText;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }\r\n            };\r\n            xhr.open(type, url, true);\r\n            for (const item of headers) {\r\n                xhr.setRequestHeader(item.name, item.value);\r\n            }\r\n            xhr.send(data);\r\n        });\r\n    }\r\n}\r\n"]}