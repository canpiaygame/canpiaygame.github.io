{"version":3,"sources":["assets/BuyWork/Script/BookDetail.ts","assets/BuyWork/Script/BookItem.ts","assets/BuyWork/Script/BottomTool.ts","assets/BuyWork/Script/DataType.ts","assets/BuyWork/Script/Helloworld.ts","assets/BuyWork/Script/HomePage.ts","assets/BuyWork/Script/Login.ts","assets/BuyWork/Script/Net.ts","assets/BuyWork/Script/OrderItemAll.ts","assets/BuyWork/Script/OrderItem.ts","assets/BuyWork/Script/RotateSelf.ts","assets/BuyWork/Script/Shop.ts","assets/BuyWork/Script/Tips.ts","assets/BuyWork/Script/ToolBar.ts","assets/BuyWork/Script/UserItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEM;AAGN;AAAwC;AAAxC;AAAA;AAGI;AAEA;AAEA;AAGA;AAEA;AAGA;AAGA;AAEA;AACA;AAOA;;AAkDA;AACJ;AAzDI;AACI;AACA;AACA;AACA;AACJ;AAEA;AACI;AACJ;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACJ;AACA;AACJ;AAGA;AACI;AACJ;AAGA;AACI;AACI;AACH;AACD;AACJ;AAEA;AACI;AACI;AACH;AACD;AACJ;AAEM;;;;;;AACF;AACa;;AAAT;AACJ;AACI;AACH;AAAM;AACH;AACH;AACD;AACA;;;;;AACH;AA1ED;AADC;AACyB;AAE1B;AADC;AACsB;AAEvB;AADC;AACgC;AAGjC;AADC;AACqB;AAEtB;AADC;AACoB;AAGrB;AADC;AACqB;AAGtB;AADC;AACoB;AAlBJ;AADpB;AACoB;AA+ErB;AA/EA;AAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPrB;AAGM;AAGN;AAAsC;AAAtC;AAAA;AAGI;AAGA;AAGA;;AA8BJ;AA5BI;AACI;AACJ;AACA;AACI;AACJ;AACA;AACI;AAAgB;AAChB;AAAoB;AACpB;AACJ;AAEA;AACI;AACA;AACJ;AAEA;AAAA;AACI;AACA;AACA;AACI;AACA;AACA;AACJ;AACJ;AAjCA;AADC;AACyB;AAG1B;AADC;AACqB;AANL;AADpB;AACoB;AAuCrB;AAvCA;AAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNrB;AAEA;AACA;AAEM;AAGN;AAAwC;AAAxC;AAAA;AAGI;AAGA;AAGA;AAEA;AAIA;;AAgDA;AACJ;AApDI;AACI;AACJ;AAEM;;;;;;AACF;AAAgB;AAChB;AAAuC;AACvC;AACa;;AAAT;AACJ;AACI;AACA;AACH;AAAM;AACH;AACH;AACD;AACA;;;;;AACH;AAED;AACI;AACA;AACI;AACA;AACJ;AACA;AACI;AACA;AACA;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;AACJ;AACD;AACI;AACH;AACL;AACA;AACI;AACA;AACA;AACA;AACJ;AAEA;AACI;AACJ;AA1DA;AADC;AACsB;AAGvB;AADC;AAC2B;AAG5B;AADC;AACyB;AATT;AADpB;AACoB;AAgErB;AAhEA;AAAqB;;;;;;;;;;;ACPrB;AAAA;AAGI;AACA;AACA;AACJ;AAAA;AAAA;AANa;AAQb;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;AAAA;AAAA;AAPa;AASb;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;AAAA;AAAA;AAPa;AAUb;AAAA;AACI;AACA;AAEJ;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;AAAA;AAAA;AAPa;AASb;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAAA;AAAA;AATa;AAUb;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;AAAA;AAAA;AAPa;AASb;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAKJ;AAAA;AAAA;AAZa;AAeA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACI;AACJ;AAEH;AAEY;AACT;AACI;AACA;AACA;AACA;AACA;AACH;AACD;AACI;AACJ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnHK;AAGN;AAAwC;AAAxC;AAAA;AAGI;AAGA;;AAOJ;AALI;AACI;AACA;AACA;AACJ;AATA;AADC;AACsB;AAGvB;AADC;AACsB;AANN;AADpB;AACoB;AAarB;AAbA;AAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHrB;AACA;AACA;AACA;AACA;AACA;AACA;AAEM;AAKN;AAAsC;AAAtC;AAAA;AAGI;AAGA;AAGA;AAEA;AAEA;AAGA;AA6BU;;AAyCd;AApEU;;;;;;AACE;AACA;AACA;AACA;AAC6B;;AAAzB;AACJ;;;AAEA;AACA;AACA;;;AAEJ;AACA;AACA;;;;;AACH;AAEK;;;;;;AACE;AACJ;AACA;AACA;AAC6B;;AAAzB;AACJ;AACA;;;;;AACH;AAIS;AACN;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACI;AACA;AACJ;AACA;AACI;AACA;AACA;AACI;AACH;AACL;AAEA;AACI;AACJ;AAEA;AACI;AACJ;AACA;AACI;AACJ;AAEA;AAAA;AACI;AACA;AACA;AACI;AACJ;AACJ;AAlFA;AADC;AACuB;AAGxB;AADC;AACqB;AAGtB;AADC;AAC6B;AAE9B;AADC;AACuB;AAExB;AADC;AACuB;AAGxB;AADC;AACiB;AAhBD;AADpB;AACoB;AAsFrB;AAtFA;AAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbrB;AAEA;AAEM;AAGN;AAAmC;AAAnC;AAAA;AAGI;AAGA;AAEA;AACA;;AA6DJ;AA5DI;AACI;AACJ;AACU;AAEV;AAEM;;;;;;AACE;AACA;AACJ;AACe;;AAAX;AACJ;AACI;AACA;AACA;AACH;AAAM;AACH;AACA;AACH;;;;;AAGJ;AAEK;;;;;;AACE;AACA;AACJ;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;AACD;AACa;;AAAT;AACJ;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;;;;;AACJ;AAEK;;;;;AACF;AAAoB;AACpB;;AAAA;AACA;AACA;AACA;;;;;AACH;AAED;AACM;;;AACF;AAAoB;AACpB;AAAgB;AAChB;AACA;;;;AACH;AAlED;AADC;AAC2B;AAG5B;AADC;AACsB;AANN;AADpB;AACoB;AAsErB;AAtEA;AAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPrB;AAEA;AAAA;AAyRA;AAtRiB;AAAkC;;;;AACvC;AACJ;;;;;AACiB;AAAW;AACpB;AACA;AACH;;AAHG;AAIJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AACY;AAAa;;;;AAClB;AACA;AACH;AACD;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAEY;AAAe;;;;AACpB;AACA;AACA;AACH;AACD;;;;;AAC+B;AAAW;AAClC;AACA;AACH;;AAHG;AAIJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAEY;AAAkC;;;;AACvC;AACJ;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAEY;AAAqC;;;;AAC1C;AACJ;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAGY;AAAsC;;;;AAC3C;AACA;AACH;AACD;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAEY;AAAqD;;;;AAC1D;AACA;AACA;AACA;AACH;AACD;;;;;AACiB;AAAW;AACpB;AACA;AACH;;AAHG;AAIJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAEY;AAAe;;;;AACpB;AACA;AACA;AACH;AACD;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAGY;AAAyB;;;;AAC9B;AACJ;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAEY;AAAa;;;;AAClB;AACA;AACA;AACH;AACD;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAEY;AAAmB;;;;AACxB;AACA;AACA;AACH;AACD;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAEY;AAA6B;;;;AAClC;AACA;AACA;AACA;AACH;AACD;;;;;AACiB;AAAW;AACpB;AACA;AACH;AACG;AACA;AAEH;;AAPG;AAQJ;AACI;AACA;AACH;AAAM;AACH;AACH;;;;AACJ;;;AACJ;AAQM;AAAyG;AAC5G;AACI;AACA;AACI;AACI;AACI;AACA;AACH;AACI;AACD;AACH;AACJ;AACL;AACA;AACA;AAAK;AACD;AACH;AACD;AACJ;AACJ;AACJ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1RA;AAGM;AAGN;AAA0C;AAA1C;AAAA;AAGI;;AASJ;AAPI;AACI;AACA;AAEJ;AANA;AADC;AACyB;AAHT;AADpB;AACoB;AAYrB;AAZA;AAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJf;AAGN;AAAuC;AAAvC;AAAA;AAGI;AAGA;AAGA;AAGA;;AA2BJ;AAxBI;AAEA;AACA;AACA;AACA;AACA;AAGA;AACI;AACA;AACJ;AAEA;AACI;AACA;AACA;AACA;AAGJ;AAjCA;AADC;AACyB;AAG1B;AADC;AACsB;AAGvB;AADC;AACsB;AAGvB;AADC;AACuB;AAZP;AADpB;AACoB;AAuCrB;AAvCA;AAAqB;;;;;;;;;ACNrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAEM;AAGN;AAAwC;AAAxC;;AAOA;AALI;AAAA;AACI;AACJ;AAJiB;AADpB;AACoB;AAOrB;AAPA;AAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVrB;AACA;AAIM;AAGN;AAAkC;AAAlC;AAAA;AAGI;AAGA;AAGA;AAEA;AACA;AACA;;AAqDA;AACJ;AArDI;AACI;AACA;AACJ;AACA;AACI;AACA;AACA;AACJ;AACA;AACI;AACA;AACI;AACA;AACJ;AACA;AACI;AACA;AACA;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;AACJ;AACD;AACI;AACH;AACL;AAEA;AACI;AACA;AACA;AACA;AACJ;AAGA;AACI;AACA;AACI;AACA;AACH;AACD;AACA;AACJ;AACA;AACI;AACJ;AA7DA;AADC;AACuB;AAGxB;AADC;AACyB;AAG1B;AADC;AAC0B;AATV;AADpB;AACoB;AAmErB;AAnEA;AAAqB;;;;;;;;;ACRrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAEM;AAGN;AAAkC;AAAlC;AAAA;AAGI;;AAKJ;AAHI;AACI;AACJ;AAJA;AADC;AACsB;AAHN;AADpB;AACoB;AAQrB;AARA;AAAqB;;;;;;;;;ACVrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AACA;AACA;AAEM;AACN;AAAA;AACA;AAAA;AAAA;AADa;AAGb;AAAqC;AAArC;AAAA;AAGI;AAGA;AACA;AAEA;AAGA;AACA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAOA;AA2FA;;AAkEA;AACJ;AApKI;AACI;AACJ;AACA;AACI;AACJ;AAGA;AACI;AACA;AACI;AACA;AACJ;AACA;AACI;AACA;AACA;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;AACJ;AACD;AACI;AACH;AACL;AAEA;AACI;AACA;AACA;AACA;AACJ;AAEA;AACI;AACI;AACJ;AACJ;AAEA;AACI;AACI;AACJ;AACJ;AAEA;AACI;AACJ;AAEA;AACI;AACJ;AAEM;;;;;AACF;AAAoB;AACpB;;AAAA;AACA;AACA;AACA;;;;;AACH;AAEK;;;;;;AACF;AAAoB;AAChB;AACA;AACJ;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;AACD;AACI;AACJ;AACA;AACa;;AAAT;AACJ;AACI;AACA;AACA;AACA;AACH;AAAM;AACH;AACH;AACD;;;;;AACH;AACD;AACI;AACI;AACA;AACH;AACL;AAEM;;;;;;AACF;AAAgB;AAChB;AACa;;AAAT;AACJ;AACI;AACA;AACH;AAAM;AACH;AACH;AACD;;;;;AACH;AACD;AACI;AACA;AACI;AACA;AACJ;AACA;AACI;AACA;AACA;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;AACJ;AACD;AACI;AACH;AAEL;AAEM;;;;;;AACF;AAAgB;AAChB;AACA;AACa;;AAAT;AACJ;AACI;AACA;AACH;AAAM;AACH;AACH;AACD;;;;;AACH;AACD;AACI;AACA;AACJ;AACA;AACI;AACA;AACJ;AACA;AACI;AACA;AACA;AAEJ;AACA;AAEA;AAhMA;AADC;AACuB;AAGxB;AADC;AACuB;AAGxB;AADC;AAC2B;AAG5B;AADC;AACsB;AAGvB;AADC;AAC2B;AAG5B;AADC;AAC2B;AAI5B;AADC;AAC0B;AAE3B;AADC;AAC0B;AAI3B;AADC;AACsB;AA5BN;AADpB;AACoB;AAqMrB;AArMA;AAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACff;AAGN;AAAsC;AAAtC;AAAA;AAGI;AAGA;AAEA;AACA;;AAQA;AACJ;AARI;AACI;AACA;AACA;AACA;AACJ;AAZA;AADC;AACyB;AAG1B;AADC;AACqB;AAEtB;AADC;AACqB;AARL;AADpB;AACoB;AAkBrB;AAlBA;AAAqB","sourcesContent":["import { BookData, EventAct, IMG } from \"./DataType\";\r\nimport HomePage from \"./HomePage\";\r\nimport Net from \"./Net\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BookDetail extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    bookName: cc.Label = null;\r\n    @property(cc.Label)\r\n    price: cc.Label = null;\r\n    @property(cc.Label)\r\n    publishingHouse: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    isbn: cc.Label = null;\r\n    @property(cc.Label)\r\n    dec: cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    pic: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    num: cc.Label = null;\r\n    bookData: BookData;\r\n    edNum = 1;\r\n    uid: string = ''\r\n    setData(bd: BookData, uid: string) {\r\n        this.bookData = bd;\r\n        this.edNum = 1;\r\n        this.uid = uid;\r\n        this.updateUI();\r\n    }\r\n    root: HomePage = null;\r\n    setRoot(root: HomePage) {\r\n        this.root = root;\r\n    }\r\n    updateUI() {\r\n        this.bookName.string = `书名：《${this.bookData.name}》`;\r\n        this.price.string = `价格：《${this.bookData.unitPrice}》`;\r\n        this.publishingHouse.string = `出版社：${this.bookData.publishingHouse}`;\r\n        this.isbn.string = `isbn：${this.bookData.isbn}`;\r\n        this.dec.string = `简介：${this.bookData.description}`;\r\n        let path = IMG.getImg((parseInt(this.bookData.cover)));\r\n        cc.loader.loadRes(path, cc.Texture2D, (error: Error, resource: any) => {\r\n            let spf = new cc.SpriteFrame;\r\n            spf.setTexture(resource);\r\n            this.pic.spriteFrame = spf;\r\n        });\r\n        this.num.string = this.edNum.toString();\r\n    }\r\n\r\n\r\n    closeBtn() {\r\n        this.node.active = false;\r\n    }\r\n\r\n\r\n    left() {\r\n        if (this.edNum - 1 >= 1) {\r\n            this.edNum = this.edNum - 1;\r\n        }\r\n        this.updateUI();\r\n    }\r\n\r\n    right() {\r\n        if (this.edNum + 1 <= 99) {\r\n            this.edNum = this.edNum + 1;\r\n        }\r\n        this.updateUI();\r\n    }\r\n\r\n    async buy() {\r\n        this.root.node.emit(EventAct.ShowLoading);\r\n        let reslut = await Net.buyBook(this.uid, this.bookData.id, this.edNum);\r\n        if (reslut) {\r\n            this.root.showTips('购买成功！');\r\n        } else {\r\n            this.root.showTips('购买失败！请重试');\r\n        }\r\n        this.root.node.emit(EventAct.HideLoading);\r\n        this.closeBtn();\r\n    }\r\n    // update (dt) {}\r\n}\r\n","import { BookData, IMG } from \"./DataType\";\r\nimport Shop from \"./Shop\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BookItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    bookName: cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    pic: cc.Sprite = null;\r\n\r\n    bookData: BookData;\r\n    root: Shop = null;\r\n\r\n    setRoot(root: Shop) {\r\n        this.root = root;\r\n    }\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.click, this)\r\n    }\r\n    click(e) {\r\n        if (!this.root) return;\r\n        if (!this.bookData) return;\r\n        this.root.onShowDetial(this.bookData)\r\n    }\r\n\r\n    setData(bd: BookData) {\r\n        this.bookData = bd;\r\n        this.updateUI();\r\n    }\r\n\r\n    updateUI() {\r\n        this.bookName.string = this.bookData.name;\r\n        let path = IMG.getImg((parseInt(this.bookData.cover)));\r\n        cc.loader.loadRes(path, cc.Texture2D, (error: Error, resource: any) => {\r\n            let spf = new cc.SpriteFrame;\r\n            spf.setTexture(resource);\r\n            this.pic.spriteFrame = spf;\r\n        })\r\n    }\r\n\r\n\r\n}\r\n","import { EventAct, OrderListData } from \"./DataType\";\r\nimport HomePage from \"./HomePage\";\r\nimport Net from \"./Net\";\r\nimport OrderItem from \"./OrderItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BottomTool extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    content: cc.Node = null\r\n\r\n    @property(cc.Prefab)\r\n    orderItem: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    orderList: cc.Node = null;\r\n\r\n    root: HomePage = null;\r\n    setRoot(root: HomePage) {\r\n        this.root = root;\r\n    }\r\n    old: OrderListData = null;\r\n    async openOrderList() {\r\n        if (!this.root) return;\r\n        if (this.root.getPageData().isTourist) return;\r\n        this.root.node.emit(EventAct.ShowLoading);\r\n        let reslut = await Net.myList(this.root.getPageData().userInfo.id);\r\n        if (reslut) {\r\n            this.old = reslut;\r\n            this.updateUI()\r\n        } else {\r\n            this.root.showTips('历史订单错误，请重试！')\r\n        }\r\n        this.root.node.emit(EventAct.HideLoading);\r\n        this.orderList.active = true;\r\n    }\r\n\r\n    updateUI() {\r\n        let data = this.old.data;\r\n        const items = this.content.children.reduce((arr, child, i) => {\r\n            arr[child.name] = child;\r\n            return arr;\r\n        }, {})\r\n        for (let i = 0; i < data.length; i++) {\r\n            const olData = data[i];\r\n            let child = items[olData.id];\r\n            if (child) {\r\n                child.getComponent(OrderItem).setData(olData);\r\n                delete items[child.name]\r\n            } else {\r\n                let node = this.createNode(olData.id);\r\n                node.getComponent(OrderItem).setData(olData);\r\n            }\r\n        }\r\n        for (let itemName in items) {\r\n            items[itemName].destroy();\r\n        }\r\n    }\r\n    createNode(name: string) {\r\n        let node = cc.instantiate(this.orderItem);\r\n        node.name = name;\r\n        this.content.addChild(node);\r\n        return node;\r\n    }\r\n\r\n    closeOrderList() {\r\n        this.orderList.active = false;\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","\r\nexport class PageData {\r\n    userInfo: UserInfo;             // 用户数据 \r\n    toolBarData: any;               // 工具栏\r\n    shopData: BookListData = null;                  // 商城数据\r\n    isLogin: boolean = false;        // \r\n    isTourist: boolean = false;\r\n}\r\n\r\nexport class UserInfo {\r\n    name: string = '';\r\n    password: string = '';\r\n    admin: string = ''\r\n    id: string = ''\r\n    creationTime: string = '';\r\n    updateTime: string = '';\r\n}\r\n\r\nexport class UserListData {\r\n    responseCode: number = 0\r\n    responseMessage: string = ''\r\n    currentPage: number = 0\r\n    pageSize: number = 0\r\n    totalPage: number = 0\r\n    data: UserInfo[] = []\r\n}\r\n\r\n\r\nexport enum EventAct {\r\n    ShowLoading = 'showLoading',\r\n    HideLoading = 'hideLoading',\r\n\r\n}\r\n\r\n// export enum role {\r\n//     Tourist,\r\n//     User,\r\n//     Admin,\r\n// }\r\n\r\nexport class BookListData {\r\n    responseCode: number = 0\r\n    responseMessage: string = ''\r\n    currentPage: number = 0\r\n    pageSize: number = 0\r\n    totalPage: number = 0\r\n    data: BookData[] = []\r\n}\r\n\r\nexport class BookData {\r\n    id: string = ''\r\n    name: string = ''\r\n    publishingHouse: string = ''\r\n    publicationDate: string = ''\r\n    isbn: string = ''\r\n    description: string = ''\r\n    cover: string = ''\r\n    unitPrice: string = ''\r\n}\r\nexport class OrderListData {\r\n    responseCode: number = 0\r\n    responseMessage: string = ''\r\n    currentPage: number = 0\r\n    pageSize: number = 0\r\n    totalPage: number = 0\r\n    data: OrderData[] = []\r\n}\r\n\r\nexport class OrderData {\r\n    id: string = ''\r\n    bookId: string = ''\r\n    userId: string = ''\r\n    userName: string = ''\r\n    bookName: string = ''\r\n    total: number = 0;\r\n    amount: number = 0;\r\n    orderDate: string;\r\n    createTime: string;\r\n    updateTime: string;\r\n\r\n}\r\n\r\n\r\nexport const URL = {\r\n    Login: 'v1/auth/login',\r\n    LogOut: 'v1/auth/logout',\r\n    Register: '/v1/user',\r\n    Fix: '/v1/user',\r\n    BookList: '/v1/book/paging',\r\n    AddBook: '/v1/book',\r\n    Buy: '/v1/order',\r\n    HistoryMy: '/v1/order/paging',\r\n    HistoryAll: '/v1/order/paging',\r\n    UserList: '/v1/user/paging',\r\n\r\n\r\n    test: 'http://localhost:8888/',\r\n    prod: '',\r\n    get DOMAIN() {\r\n        return URL.test\r\n    }\r\n\r\n}\r\n\r\nexport const IMG = {\r\n    IMG: [\r\n        'Img/1',\r\n        'Img/2',\r\n        'Img/3',\r\n        'Img/4',\r\n        'Img/5'\r\n    ],\r\n    getImg(num: number) {\r\n        return IMG.IMG[num]\r\n    }\r\n}","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Helloworld extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    start () {\r\n        // init logic\r\n        this.label.string = this.text;\r\n        console.log('aa')\r\n    }\r\n}\r\n","import BottomTool from \"./BottomTool\";\r\nimport { BookListData, EventAct, PageData, UserInfo } from \"./DataType\";\r\nimport Login from \"./Login\";\r\nimport Net from \"./Net\";\r\nimport Shop from \"./Shop\";\r\nimport Tips from \"./Tips\";\r\nimport ToolBar from \"./ToolBar\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n\r\n@ccclass\r\nexport default class HomePage extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    loading: cc.Node = null;\r\n\r\n    @property(Shop)\r\n    shopNode: Shop = null;\r\n\r\n    @property(BottomTool)\r\n    bottomTool: BottomTool = null;\r\n    @property(ToolBar)\r\n    topTool: ToolBar = null;\r\n    @property(Login)\r\n    loginNode: Login = null;\r\n\r\n    @property(Tips)\r\n    tips: Tips = null;\r\n\r\n    async setUserData(ud: UserInfo) {\r\n        let pd = this.getPageData();\r\n        if (ud) {\r\n            pd.userInfo = ud;\r\n            pd.isLogin = true;\r\n            let bookList: BookListData = await Net.getBookList();\r\n            pd.shopData = bookList;\r\n        } else {\r\n            pd.userInfo = null;\r\n            pd.isLogin = false;\r\n            pd.shopData = null;\r\n        }\r\n        this.updatePageData(pd);\r\n        this.node.emit(EventAct.HideLoading);\r\n        this.topTool.setUserData(ud);\r\n    }\r\n\r\n    async touristLogin() {\r\n        let pd = this.getPageData();\r\n        pd.isTourist = true;\r\n        pd.userInfo = null;\r\n        pd.isLogin = false;\r\n        let bookList: BookListData = await Net.getBookList();\r\n        pd.shopData = bookList;\r\n        this.updatePageData(pd);\r\n    }\r\n\r\n    protected pageData: PageData = new PageData();\r\n\r\n    protected onLoad(): void {\r\n        this.node.on(EventAct.ShowLoading, this.showLoading.bind(this), this);\r\n        this.node.on(EventAct.HideLoading, this.hideLoading.bind(this), this);\r\n        this.loginNode.setRoot(this);\r\n        this.shopNode.setRoot(this);\r\n        this.bottomTool.setRoot(this);\r\n        this.topTool.setRoot(this);\r\n    }\r\n\r\n    updatePageData(data: PageData) {\r\n        this.pageData = data;\r\n        this.updateUI(this.pageData);\r\n    }\r\n    updateUI(data: PageData) {\r\n        this.loginNode.node.active = data.isTourist ? false : !data.isLogin;\r\n        this.shopNode.node.active = (data.isLogin && data.shopData != null)\r\n        if (data.shopData && data.shopData != this.shopNode.shopData) {\r\n            this.shopNode.setData(data.shopData,data.userInfo.id);\r\n        }\r\n    }\r\n\r\n    showLoading() {\r\n        this.loading.active = true;\r\n    }\r\n\r\n    hideLoading() {\r\n        this.loading.active = false;\r\n    }\r\n    getPageData(): PageData {\r\n        return this.pageData;\r\n    }\r\n\r\n    showTips(str: string) {\r\n        this.tips.node.active = true;\r\n        this.tips.setLabel(str);\r\n        this.scheduleOnce(() => {\r\n            this.tips.node.active = false;\r\n        }, 1)\r\n    }\r\n}\r\n","import { EventAct, UserInfo } from \"./DataType\";\r\nimport HomePage from \"./HomePage\";\r\nimport Net from \"./Net\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Login extends cc.Component {\r\n\r\n    @property(cc.EditBox)\r\n    userName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    psw: cc.EditBox = null;\r\n\r\n    root: HomePage = null;\r\n    userData: UserInfo = null;\r\n    setRoot(root: HomePage) {\r\n        this.root = root;\r\n    }\r\n    protected onLoad(): void {\r\n\r\n    }\r\n\r\n    async loginBtnClick() {\r\n        let userName = this.userName.textLabel.string;\r\n        let psw = this.psw.textLabel.string;\r\n        this.root.node.emit(EventAct.ShowLoading);\r\n        let userData = await Net.login(userName, psw);\r\n        if (userData.id) {\r\n            this.root.setUserData(userData);\r\n            this.userData = userData;\r\n            this.root.showTips('登录成功！');\r\n        } else {\r\n            this.root.showTips('登录失败！请重试');\r\n            this.root.node.emit(EventAct.HideLoading);\r\n        }\r\n        // this.root.userData = userData;\r\n\r\n    }\r\n\r\n    async register() {\r\n        let userName = this.userName.textLabel.string;\r\n        let psw = this.psw.textLabel.string;\r\n        if (userName.length < 3) {\r\n            this.root.showTips('用户名设置太短！');\r\n            return;\r\n        } else if (psw.length < 6) {\r\n            this.root.showTips('密码设置太短！');\r\n            return;\r\n        }\r\n        this.root.node.emit(EventAct.ShowLoading);\r\n        let result = await Net.register(userName, psw, true);\r\n        if (result) {\r\n            this.root.showTips('注册成功！正在跳转');\r\n            this.loginBtnClick();\r\n        } else {\r\n            this.root.showTips('注册失败！请重试');\r\n            this.root.node.emit(EventAct.HideLoading);\r\n        }\r\n    }\r\n\r\n    async logOutBtnClick(e) {\r\n        if (!this.userData) return;\r\n        await Net.logout(this.userData.id);\r\n        this.root.setUserData(null);\r\n        this.userData = null;\r\n        this.root.showTips('退出登录！');\r\n    }\r\n\r\n    // 游客登陆\r\n    async touristLogin() {\r\n        if (!this.userData) return;\r\n        if (!this.root) return;\r\n        this.root.touristLogin();\r\n        this.root.showTips('游客登录！');\r\n    }\r\n}\r\n","import { BookData, BookListData, OrderListData, URL, UserInfo } from \"./DataType\";\r\n\r\nexport default class Net {\r\n\r\n\r\n    static async login(name: string, psw: string): Promise<UserInfo> {\r\n        let data = {};\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.Login}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('登陆成功');\r\n                reslove(result.data)\r\n            } else {\r\n                reject(new Error(`登陆失败`));\r\n            }\r\n        })\r\n    }\r\n    static async logout(uid): Promise<any> {\r\n        let data = {\r\n            uid: uid\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.LogOut}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('登出成功');\r\n                reslove(true)\r\n            } else {\r\n                reject(new Error(`登出失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async getBookList(): Promise<BookListData> {\r\n        let data = {\r\n            currentPage: 0,\r\n            pageSize: 9999,\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result: BookListData = JSON.parse(await this.ajax('PUT', `${URL.DOMAIN}${URL.BookList}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('书单');\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`书单失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async addBook(bookData: BookData, uid): Promise<any> {\r\n        let data = bookData;\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.AddBook}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('添加书籍成功');\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`添加失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async updateBook(bookData: BookData, uid): Promise<any> {\r\n        let data = bookData;\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('PUT', `${URL.DOMAIN}${URL.AddBook}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('添加书籍成功');\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`添加失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    static async getBookByID(bookData: BookData, uid): Promise<any> {\r\n        let data = {\r\n            id: bookData.id\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('GET', `${URL.DOMAIN}${URL.AddBook}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('添加书籍成功');\r\n                reslove(result.data)\r\n            } else {\r\n                reject(new Error(`添加失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async register(name: string, psw: string, admin: boolean): Promise<any> {\r\n        let data = {\r\n            name: name,\r\n            password: psw,\r\n            admin: admin\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.Register}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('注册成功');\r\n                reslove(true)\r\n            } else {\r\n                reject(new Error(`注册失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async userList(uid): Promise<any> {\r\n        let data = {\r\n            currentPage: 0,\r\n            pageSize: 9999,\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('PUT', `${URL.DOMAIN}${URL.UserList}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('成功');\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    static async Fix(userData: UserInfo): Promise<any> {\r\n        let data = userData;\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('PUT', `${URL.DOMAIN}${URL.Fix}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: userData.id\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('注册成功');\r\n                reslove(true)\r\n            } else {\r\n                reject(new Error(`注册失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async myList(uid): Promise<OrderListData> {\r\n        let data = {\r\n            currentPage: 0,\r\n            pageSize: 9999,\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.HistoryMy}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async orderListAll(uid): Promise<OrderListData> {\r\n        let data = {\r\n            currentPage: 0,\r\n            pageSize: 9999,\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('PUT', `${URL.DOMAIN}${URL.HistoryMy}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                reslove(result)\r\n            } else {\r\n                reject(new Error(`失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n    static async buyBook(uid, bookId, total): Promise<any> {\r\n        let data = {\r\n            userId: uid,\r\n            bookId: bookId,\r\n            total: total\r\n        };\r\n        return new Promise(async (reslove, reject) => {\r\n            let result = JSON.parse(await this.ajax('POST', `${URL.DOMAIN}${URL.Buy}`, JSON.stringify(data), [{\r\n                name: \"Content-Type\",\r\n                value: \"application/json\"\r\n            }, {\r\n                name: 'userId',\r\n                value: uid\r\n\r\n            }]));\r\n            if (result && result.responseMessage == 'Success') {\r\n                console.log('购买成功');\r\n                reslove(true)\r\n            } else {\r\n                reject(new Error(`购买失败`));\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    static ajax(type: string, url: string, data?: Blob | BufferSource | FormData | URLSearchParams | string | null, headers: { name: string, value: string }[] = []) {\r\n        return new Promise<string>((resolve) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState == 4) {\r\n                    if ((xhr.status >= 200 && xhr.status < 400)) {\r\n                        let response: string = xhr.responseText;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }\r\n            };\r\n            xhr.open(type, url, true);\r\n            for (const item of headers) {\r\n                xhr.setRequestHeader(item.name, item.value);\r\n            }\r\n            xhr.send(data);\r\n        });\r\n    }\r\n}\r\n","import { OrderData } from \"./DataType\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport Shop from \"./Shop\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OrderItemAll extends OrderItem {\r\n\r\n    @property(cc.Label)\r\n    userName: cc.Label = null;\r\n\r\n    updateUI() {\r\n        super.updateUI && super.updateUI();\r\n        this.userName.string = `下单用户：《${this.orderData.userName}》`;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { OrderData } from \"./DataType\";\r\nimport Shop from \"./Shop\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OrderItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    bookName: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    total: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    ctime: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    amount: cc.Label = null;\r\n\r\n    orderData: OrderData;\r\n    // root: Shop = null;\r\n\r\n    // setRoot(root: Shop) {\r\n    //     this.root = root;\r\n    // }\r\n    onLoad() {\r\n    }\r\n\r\n\r\n    setData(bd: OrderData) {\r\n        this.orderData = bd;\r\n        this.updateUI();\r\n    }\r\n\r\n    updateUI() {\r\n        this.bookName.string = `书名：《${this.orderData.bookName}》`;\r\n        this.total.string = `合计：《${this.orderData.total}》`;\r\n        this.ctime.string = `创建时间：《${this.orderData.createTime}》`;\r\n        this.amount.string = `数量：《${this.orderData.amount}》`;\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RotateSelf extends cc.Component {\r\n\r\n    start() {\r\n        cc.tween(this.node).sequence(cc.tween(this.node).to(2.5, { angle: -359.9 }), cc.tween(this.node).call(() => { this.node.angle = 0; })).repeatForever().start();\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import BookDetail from \"./BookDetail\";\r\nimport BookItem from \"./BookItem\";\r\nimport { BookData, BookListData } from \"./DataType\";\r\nimport HomePage from \"./HomePage\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Shop extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n\r\n    @property(BookDetail)\r\n    detail: BookDetail = null;\r\n\r\n    @property(cc.Prefab)\r\n    bookItem: cc.Prefab = null;\r\n\r\n    shopData: BookListData = null;\r\n    root: HomePage = null;\r\n    uid: string = ''\r\n    setRoot(root: HomePage) {\r\n        this.root = root;\r\n        this.detail.setRoot(root);\r\n    }\r\n    setData(sd: BookListData,uid) {\r\n        this.uid = uid\r\n        this.shopData = sd;\r\n        this.updateUI();\r\n    }\r\n    updateUI() {\r\n        let data = this.shopData.data;\r\n        const items = this.content.children.reduce((arr, child, i) => {\r\n            arr[child.name] = child;\r\n            return arr;\r\n        }, {})\r\n        for (let i = 0; i < data.length; i++) {\r\n            const bookData = data[i];\r\n            let child = items[bookData.id];\r\n            if (child) {\r\n                child.getComponent(BookItem).setData(bookData);\r\n                delete items[child.name]\r\n            } else {\r\n                let node = this.createNode(bookData.id);\r\n                node.getComponent(BookItem).setData(bookData);\r\n            }\r\n        }\r\n        for (let itemName in items) {\r\n            items[itemName].destroy();\r\n        }\r\n    }\r\n\r\n    createNode(name: string) {\r\n        let node = cc.instantiate(this.bookItem);\r\n        node.name = name;\r\n        this.content.addChild(node);\r\n        return node;\r\n    }\r\n    \r\n\r\n    onShowDetial(bd: BookData) {\r\n        let pd = this.root.getPageData();\r\n        if (pd.isTourist) {\r\n            this.root.showTips('游客只有查看权限，请注册登录');\r\n            return;\r\n        }\r\n        this.detail.node.active = true;\r\n        this.detail.setData(bd,this.uid);\r\n    }\r\n    onHideDetial() {\r\n        this.detail.node.active = false;\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Tips extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    setLabel(str: string) {\r\n        this.label.string = str;\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { EventAct, OrderListData, UserInfo, UserListData } from \"./DataType\";\r\nimport HomePage from \"./HomePage\";\r\nimport Net from \"./Net\";\r\nimport OrderItemAll from \"./OrderItemAll\";\r\nimport UserItem from \"./UserItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nexport class WinData {\r\n}\r\n@ccclass\r\nexport default class ToolBar extends cc.Component {\r\n\r\n    @property([cc.Node])\r\n    btnList: cc.Node[] = [];\r\n\r\n    @property([cc.Node])\r\n    winList: cc.Node[] = [];\r\n    //--------------\r\n    @property(cc.EditBox)\r\n    userName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    psw: cc.EditBox = null;\r\n    //--------------\r\n    @property(cc.Node)\r\n    contentOrder: cc.Node = null\r\n\r\n    @property(cc.Prefab)\r\n    orderItem: cc.Prefab = null;\r\n    //-----------------------\r\n\r\n    @property(cc.Node)\r\n    contentUser: cc.Node = null\r\n    @property(cc.Prefab)\r\n    userItem: cc.Prefab = null;\r\n    //-----------------------\r\n\r\n    @property(cc.Node)\r\n    topWin: cc.Node = null;\r\n\r\n    root: HomePage = null;\r\n    openWin: number = 0;\r\n    userData: UserInfo = null;\r\n    setRoot(root: HomePage) {\r\n        this.root = root;\r\n    }\r\n    setUserData(ud: UserInfo) {\r\n        this.userData = ud;\r\n    }\r\n    old: OrderListData = null;\r\n\r\n    updataShop() {\r\n        let data = this.old.data;\r\n        const items = this.contentOrder.children.reduce((arr, child, i) => {\r\n            arr[child.name] = child;\r\n            return arr;\r\n        }, {})\r\n        for (let i = 0; i < data.length; i++) {\r\n            const olData = data[i];\r\n            let child = items[olData.id];\r\n            if (child) {\r\n                child.getComponent(OrderItemAll).setData(olData);\r\n                delete items[child.name]\r\n            } else {\r\n                let node = this.createNode(olData.id, this.orderItem);\r\n                node.getComponent(OrderItemAll).setData(olData);\r\n            }\r\n        }\r\n        for (let itemName in items) {\r\n            items[itemName].destroy();\r\n        }\r\n    }\r\n\r\n    createNode(name: string, pf: cc.Prefab) {\r\n        let node = cc.instantiate(pf);\r\n        node.name = name;\r\n        this.contentOrder.addChild(node);\r\n        return node;\r\n    }\r\n\r\n    adminUI() {\r\n        this.btnList.forEach(element => {\r\n            element.active = true;\r\n        });\r\n    }\r\n\r\n    userUI() {\r\n        this.btnList.forEach((element, i) => {\r\n            element.active = (i == 0 || i == 4);\r\n        });\r\n    }\r\n\r\n    closeBtnClick() {\r\n        this.topWin.active = false;\r\n    }\r\n\r\n    openBtnClick() {\r\n        this.topWin.active = true;\r\n    }\r\n\r\n    async logOutBtnClick(e) {\r\n        if (!this.userData) return;\r\n        await Net.logout(this.userData.id);\r\n        this.root.setUserData(null);\r\n        this.userData = null;\r\n        this.root.showTips('退出登录！');\r\n    }\r\n\r\n    async fixUser() {\r\n        if (!this.userData) return;\r\n        let userName = this.userName.textLabel.string;\r\n        let psw = this.psw.textLabel.string;\r\n        if (userName.length < 3) {\r\n            this.root.showTips('用户名设置太短！');\r\n            return;\r\n        } else if (psw.length < 6) {\r\n            this.root.showTips('密码设置太短！');\r\n            return;\r\n        }\r\n        this.root.node.emit(EventAct.ShowLoading);\r\n        let data = this.userData;\r\n        data.name = userName;\r\n        data.password = psw\r\n        let result = await Net.Fix(data);\r\n        if (result) {\r\n            this.root.showTips('修改成功');\r\n            this.userName.textLabel.string = ''\r\n            this.psw.textLabel.string = '';\r\n            this.root.setUserData(result);\r\n        } else {\r\n            this.root.showTips('修改失败！');\r\n        }\r\n        this.root.node.emit(EventAct.HideLoading);\r\n    }\r\n    updataUI() {\r\n        for (let i = 0; i < this.winList.length; i++) {\r\n            const element = this.winList[i];\r\n            element.x = this.openWin == i ? -36 : -4000\r\n        }\r\n    }\r\n    userList:UserListData = null;\r\n    async openUserList(){\r\n        if (!this.root) return;\r\n        this.root.node.emit(EventAct.ShowLoading);\r\n        let reslut = await Net.userList(this.root.getPageData().userInfo.id);\r\n        if (reslut) {\r\n            this.userList = reslut;\r\n            this.updataUserList()\r\n        } else {\r\n            this.root.showTips('错误，请重试！')\r\n        }\r\n        this.root.node.emit(EventAct.HideLoading);\r\n    }\r\n    updataUserList() {\r\n        let data = this.userList.data;\r\n        const items = this.contentUser.children.reduce((arr, child, i) => {\r\n            arr[child.name] = child;\r\n            return arr;\r\n        }, {})\r\n        for (let i = 0; i < data.length; i++) {\r\n            const uData = data[i];\r\n            let child = items[uData.id];\r\n            if (child) {\r\n                child.getComponent(UserItem).setData(uData);\r\n                delete items[child.name]\r\n            } else {\r\n                let node = this.createNode(uData.id, this.userItem);\r\n                node.getComponent(UserItem).setData(uData);\r\n            }\r\n        }\r\n        for (let itemName in items) {\r\n            items[itemName].destroy();\r\n        }\r\n\r\n    }\r\n\r\n    async openOrderList() {\r\n        if (!this.root) return;\r\n        // if (this.root.getPageData().isTourist) return;\r\n        this.root.node.emit(EventAct.ShowLoading);\r\n        let reslut = await Net.orderListAll(this.root.getPageData().userInfo.id);\r\n        if (reslut) {\r\n            this.old = reslut;\r\n            this.updataShop()\r\n        } else {\r\n            this.root.showTips('历史订单错误，请重试！')\r\n        }\r\n        this.root.node.emit(EventAct.HideLoading);\r\n    }\r\n    btnUserClick() {\r\n        this.openWin = 0;\r\n        this.updataUI();\r\n    }\r\n    btnUserListClick() {\r\n        this.openWin = 1;\r\n        this.updataUI();\r\n    }\r\n    btnOrderListClcik() {\r\n        this.openWin = 3;\r\n        this.updataUI();\r\n        this.openOrderList();\r\n\r\n    }\r\n    btnShopListClick() {\r\n\r\n    }\r\n    // update (dt) {}\r\n}\r\n","import { UserInfo } from \"./DataType\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UserItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    userName: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    role: cc.Label = null;\r\n    @property(cc.Label)\r\n    time: cc.Label = null;\r\n    userData: UserInfo = null;\r\n    setData(userData: UserInfo) {\r\n        this.userData = userData;\r\n        this.userName.string = `用户名：${userData.name}`;\r\n        this.role.string = `身份：${userData.admin ? '管理员' : '普通用户'}`;\r\n        this.time.string = `注册时间：${userData.creationTime}`;\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"],"file":"index.js"}